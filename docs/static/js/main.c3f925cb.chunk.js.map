{"version":3,"sources":["components/add-category/add-category.jsx","helpers/getGifs.js","components/gif-grid-item/gif-grid-item.jsx","components/gif-grid/gif-grid.jsx","hooks/useFetchGifs.js","gif-expert-app/gif-expert-app.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","prevCategory","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","loading","GifGrid","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAgBvC,OACE,sBAAMC,SAVa,SAAAC,GACnBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAY,OAAKP,GAAL,mBAAoBO,OAC9CN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAlBoB,SAAAP,GACxBF,EAAcE,EAAMQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UAAUH,GAD3C,+DAEEI,MAAMF,GAFR,cAEfG,EAFe,gBAGEA,EAASC,OAHX,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATjB,kBAadM,GAbc,4CAAH,sDCWLO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC5B,OACE,sBAAKc,UAAW,uBAAhB,UACE,qBAAKC,IAAKf,EAAKgB,IAAKN,EAAOO,QAAS,SACpC,4BAAIP,QCwBKQ,EAxBC,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECFJ,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNY,SAAS,IAH6B,mBACjCE,EADiC,KAC1BC,EAD0B,KAkBxC,OAZAC,qBAAU,WACRxB,EAAQC,GACLwB,MAAK,SAAAC,GAEJH,EAAS,CACPf,KAAMkB,EACNN,SAAS,SAId,CAACnB,IAEGqB,EDd0BK,CAAa1B,GAAjCa,EAFiB,EAEtBN,KAAaY,EAFS,EAETA,QAErB,OACE,qCACE,oBAAIH,UAAW,kBAAf,SAAmChB,IAEjCmB,GAAW,mBAAGH,UAAW,iBAAd,qBAEb,qBAAKA,UAAW,YAAhB,SAEIH,EAAOJ,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEIA,GADGA,EAAIC,aEMRgB,EArBM,SAACC,GAAW,IAAD,EACM1C,mBAAS,CAAC,gBADhB,mBACvB2C,EADuB,KACX5C,EADW,KAG9B,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGI4C,EAAWpB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,GADLA,U,MCVnB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c3f925cb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = event => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(prevCategory => [inputValue, ...prevCategory]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input \r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddCategory;\r\n\r\n","export const getGifs = async(category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=11&api_key=9LMRGaLHn1jOUxfAMKmXzvOfBZn4BFBk`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    }\r\n  });\r\n\r\n  return gifs;\r\n};","import React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className={'card animate__fadeIn'}>\r\n      <img src={url} alt={title} loading={'lazy'} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\n\r\nimport { useFetchGifs } from '../../hooks/useFetchGifs';\r\n\r\nimport GifGridItem from '../gif-grid-item/gif-grid-item';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className={'animate__fadeIn'}>{category}</h3>\r\n\r\n      { loading && <p className={'animate__flash'}>Loading</p> }\r\n\r\n      <div className={'card-grid'}>\r\n        {\r\n          images.map(img => (\r\n            <GifGridItem \r\n              key={img.id}\r\n            {...img}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n    </>   \r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(imgs => {\r\n\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n        \r\n      })\r\n  }, [category]);\r\n\r\n  return state;\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport AddCategory from '../components/add-category/add-category';\r\nimport GifGrid from '../components/gif-grid/gif-grid';\r\n\r\nconst GifExpertApp = (props) => {\r\n  const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n        { \r\n          categories.map(category => \r\n            <GifGrid\r\n              key={category}\r\n              category={category}\r\n            />\r\n          )\r\n        }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from \"./gif-expert-app/gif-expert-app\";\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}